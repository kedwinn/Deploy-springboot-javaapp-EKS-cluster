pipeline {
    agent any

        tools {
            maven 'Maven3'
        }
    environment {
        registry = "655140803907.dkr.ecr.eu-west-2.amazonaws.com/springboot-javawebapp:latest"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/kedwinn/Deploy-springboot-javaapp-EKS-cluster']]])
            }
        }
        
     stage ('Build Jar') {
          steps {
            sh 'mvn clean install'           
            }
        }
    
        stage ("Build image") {
            steps {
                script {
                    docker.build registry
                }
            }
        }
        
        stage ("docker push") {
         steps {
             script {
                sh "aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 655140803907.dkr.ecr.eu-west-2.amazonaws.com"
                sh "docker push 655140803907.dkr.ecr.eu-west-2.amazonaws.com/springboot-javawebapp:latest"
                 
             }
           }   
        }
               stage ("Kube Deploy") {
            steps {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'K8S', namespace: '', serverUrl: '') {
                 sh ('kubectl apply -f  eks-deploy-k8s.yaml')
                }
            }
        }
    }
}
 
